M_10_F = case_when(!(M_02 == "1") ~ "na", TRUE ~ M_10_F),
M_10_G = case_when(!(M_02 == "1") ~ "na", TRUE ~ M_10_G),
M_10_H = case_when(!(M_02 == "1") ~ "na", TRUE ~ M_10_H),
M_10_I = case_when(!(M_02 == "1") ~ "na", TRUE ~ M_10_I),
M_10_J = case_when(!(M_02 == "1") ~ "na", TRUE ~ M_10_J),
M_10_K = case_when(!(M_02 == "1") ~ "na", TRUE ~ M_10_K),
M_10_L = case_when(!(M_02 == "1") ~ "na", TRUE ~ M_10_L),
M_10_M = case_when(!(M_02 == "1") ~ "na", TRUE ~ M_10_M),
M_10_N = case_when(!(M_02 == "1") ~ "na", TRUE ~ M_10_N),
M_10_O = case_when(!(M_02 == "1") ~ "na", TRUE ~ M_10_O)) %>%
mutate(M_05 = as.integer(M_05),
M_06 = as.integer(M_06),
M_07 = as.integer(M_07),
M_08_VALOR = as.integer(M_08_VALOR))
colSums(is.na(C_m))
C_n <- read_csv("Datos originales/n_capitulos.csv")
table(C_n$N_05)
table(C_n$N_07)
table(C_n$N_09)
C_n <- C_n %>%
select(-`SECUENCIA_ENCUESTA`, -`SECUENCIA_P`, -`ORDEN`) %>%
mutate_all(as.character) %>%
mutate(N_03 = case_when(!(N_02 == "1") ~ "na", TRUE ~ N_03),
N_04 = case_when(!(N_02 == "1") ~ "na", TRUE ~ N_04),
N_05 = case_when(!(N_04 == "1") ~ "0", TRUE ~ N_05), #num
N_06_A = case_when(!(N_04 == "1") ~ "na", TRUE ~ N_06_A),
N_06_B = case_when(!(N_04 == "1") ~ "na", TRUE ~ N_06_B),
N_06_C = case_when(!(N_04 == "1") ~ "na", TRUE ~ N_06_C),
N_06_A = replace_na(N_06_A, "2"),
N_06_B = replace_na(N_06_B, "2"),
N_06_C = replace_na(N_06_C, "2"),
N_07 = case_when(!(N_06_A == "1") ~ "0", TRUE ~ N_07), #num
N_08 = case_when(!(N_04 == "1") ~ "na", TRUE ~ N_08),
N_09 = case_when(!(N_02 == "1") ~ "0", TRUE ~ N_09), #num
N_09_TEXTO = case_when(!(N_02 == "1") ~ "na", TRUE ~ N_09_TEXTO),
N_10_A = case_when(!(N_02 == "1") ~ "na", TRUE ~ N_10_A),
N_10_B = case_when(!(N_02 == "1") ~ "na", TRUE ~ N_10_B),
N_10_C = case_when(!(N_02 == "1") ~ "na", TRUE ~ N_10_C),
N_10_D = case_when(!(N_02 == "1") ~ "na", TRUE ~ N_10_D),
N_10_E = case_when(!(N_02 == "1") ~ "na", TRUE ~ N_10_E),
N_10_F = case_when(!(N_02 == "1") ~ "na", TRUE ~ N_10_F),
N_10_G = case_when(!(N_02 == "1") ~ "na", TRUE ~ N_10_G),
N_10_H = case_when(!(N_02 == "1") ~ "na", TRUE ~ N_10_H),
N_10_I = case_when(!(N_02 == "1") ~ "na", TRUE ~ N_10_I),
N_10_A = replace_na(N_10_A, "2"),
N_10_B = replace_na(N_10_B, "2"),
N_10_C = replace_na(N_10_C, "2"),
N_10_D = replace_na(N_10_D, "2"),
N_10_E = replace_na(N_10_E, "2"),
N_10_F = replace_na(N_10_F, "2"),
N_10_G = replace_na(N_10_G, "2"),
N_10_H = replace_na(N_10_H, "2"),
N_10_I = replace_na(N_10_I, "2")) %>%
mutate(N_05 = as.numeric(N_05),
N_07 = as.numeric(N_07),
N_09 = as.numeric(N_09))
colSums(is.na(C_n))
C_o <- read_csv("Datos originales/o_capitulos.csv")
table(C_o$O_06)
table(C_o$O_07)
table(C_o$O_08)
table(C_o$O_09_VALOR)
C_o <- C_o %>%
select(-`SECUENCIA_ENCUESTA`, -`SECUENCIA_P`, -`ORDEN`) %>%
mutate_all(as.character) %>%
mutate(O_03 = case_when(!(O_02 == "1") ~ "na", TRUE ~ O_03),
O_04_A = case_when(!(O_02 == "1") ~ "na", TRUE ~ O_04_A),
O_04_A = replace_na(O_04_A, "2"),
O_04_B = case_when(!(O_02 == "1") ~ "na", TRUE ~ O_04_B),
O_04_B = replace_na(O_04_B, "2"),
O_04_C = case_when(!(O_02 == "1") ~ "na", TRUE ~ O_04_C),
O_04_C = replace_na(O_04_C, "2"),
O_04_D = case_when(!(O_02 == "1") ~ "na", TRUE ~ O_04_D),
O_04_D = replace_na(O_04_D, "2"),
O_04_FUMADA = case_when(!(O_04_A == "1") ~ "na", TRUE ~ O_04_FUMADA),
O_05 = case_when(!(O_02 == "1") ~ "na", TRUE ~ O_05),
O_06 = case_when(!(O_02 == "1") ~ "0", TRUE ~ O_06), #num
O_07 = case_when(!(O_02 == "1") ~ "0", TRUE ~ O_07), #num
O_08 = case_when(!(O_02 == "1") ~ "0", TRUE ~ O_08), #num
O_09 = case_when(!(O_02 == "1") ~ "na", TRUE ~ O_09),
O_09_VALOR = case_when(!(O_09 == "1") ~ "0", TRUE ~ O_09_VALOR), #num
O_09_TEXTO = case_when(!(O_09 == "1") ~ "na", TRUE ~ O_09_TEXTO),
O_10_A = case_when(!(O_02 == "1") ~ "na", TRUE ~ O_10_A),
O_10_B = case_when(!(O_02 == "1") ~ "na", TRUE ~ O_10_B),
O_10_C = case_when(!(O_02 == "1") ~ "na", TRUE ~ O_10_C),
O_10_D = case_when(!(O_02 == "1") ~ "na", TRUE ~ O_10_D),
O_10_E = case_when(!(O_02 == "1") ~ "na", TRUE ~ O_10_E),
O_10_F = case_when(!(O_02 == "1") ~ "na", TRUE ~ O_10_F),
O_10_G = case_when(!(O_02 == "1") ~ "na", TRUE ~ O_10_G),
O_10_H = case_when(!(O_02 == "1") ~ "na", TRUE ~ O_10_H),
O_10_I = case_when(!(O_02 == "1") ~ "na", TRUE ~ O_10_I),
O_10_A = replace_na(O_10_A, "2"),
O_10_B = replace_na(O_10_B, "2"),
O_10_C = replace_na(O_10_C, "2"),
O_10_D = replace_na(O_10_D, "2"),
O_10_E = replace_na(O_10_E, "2"),
O_10_F = replace_na(O_10_F, "2"),
O_10_G = replace_na(O_10_G, "2"),
O_10_H = replace_na(O_10_H, "2"),
O_10_I = replace_na(O_10_I, "2")) %>%
mutate(O_06 = as.numeric(O_06),
O_07 = as.numeric(O_07),
O_08 = as.numeric(O_08),
O_09_VALOR = as.numeric(O_09_VALOR))
colSums(is.na(C_o))
#### P - Otras  ----
C_p <- read_csv("Datos originales/p_capitulos.csv")
colSums(is.na(C_p))
# ANALGÉSICOS OPIOIDES
table(C_g$G_11_M)
C_p1 <- C_p %>%
select(`P_01`, `P_02`, `DIRECTORIO`, `SECUENCIA_ENCUESTA`, `SECUENCIA_P`, `ORDEN`) %>%
mutate_all(as.character) %>%
left_join(C_g[, c("DIRECTORIO", "G_11_M")], by = c("DIRECTORIO" = "DIRECTORIO")) %>%
filter(G_11_M == "1") %>%
mutate(P_02 = case_when(!(P_01 == "1") ~ "na", TRUE ~ P_02)) %>%
select(-`G_11_M`)
colSums(is.na(C_p1))
# LSD
table(C_g$G_11_N)
C_p2 <- C_p %>%
select(`P_03`, `P_04`, `DIRECTORIO`, `SECUENCIA_ENCUESTA`, `SECUENCIA_P`, `ORDEN`) %>%
mutate_all(as.character) %>%
left_join(C_g[, c("DIRECTORIO", "G_11_N")], by = c("DIRECTORIO" = "DIRECTORIO")) %>%
filter(G_11_N == "1") %>%
mutate(P_04 = case_when(!(P_03 == "1") ~ "na", TRUE ~ P_04)) %>%
select(-`G_11_N`)
colSums(is.na(C_p2))
# HONGOS - YAGE - CACAO SABANERO
table(C_g$G_11_O); table(C_g$G_11_P); table(C_g$G_11_Q)
C_p3 <- C_p %>%
select(`P_05`, `P_06`, `DIRECTORIO`, `SECUENCIA_ENCUESTA`, `SECUENCIA_P`, `ORDEN`) %>%
mutate_all(as.character) %>%
left_join(C_g[, c("DIRECTORIO", "G_11_O", "G_11_P", "G_11_Q")], by = c("DIRECTORIO" = "DIRECTORIO")) %>%
filter(G_11_O == "1" | G_11_P == "1" | G_11_Q == "1") %>%
mutate(P_06 = case_when(!(P_05 == "1") ~ "na", TRUE ~ P_06)) %>%
select(-`G_11_O`, -`G_11_P`, -`G_11_Q`)
colSums(is.na(C_p3))
# Se borran los registros de "no aplica"
nna <- C_e%>% filter(E_06 != "na")
sum(nna$E_06 == "99") # cuantas personas no contestaron
nna <- nna %>% filter(E_06 != "99")
boxplot(as.numeric(nna$E_06))
hist(as.numeric(nna$E_06))
quantile(as.numeric(nna$E_06), probs = 0.25)
nna <- C_e%>% filter(E_06 != "na")
sum(nna$E_06 == "99") # cuantas personas no contestaron
nna <- nna %>% filter(E_06 != "99")
boxplot(as.numeric(nna$E_06))
hist(as.numeric(nna$E_06))
quantile(as.numeric(nna$E_06), probs = 0.25)
# Se borran los registros de "no aplica"
nna <- C_e%>% filter(E_06 != 0)
sum(nna$E_06 == "99") # cuantas personas no contestaron
nna <- nna %>% filter(E_06 != "99" )
# Se borran los registros de "no aplica"
nna <- C_e%>% filter(E_06 != 0)
nna <- nna %>% filter(E_06 != "99")
boxplot(as.numeric(nna$E_06))
hist(as.numeric(nna$E_06))
quantile(as.numeric(nna$E_06), probs = 0.25)
View(nna)
# Se borran los registros de "no aplica"
nna <- C_e%>% filter(E_06 != 0)
sum(nna$E_06 == "99") # cuantas personas no contestaron
nna <- nna %>% filter(E_06 != "99")
# Se borran los registros de "no aplica"
nna <- C_e%>% filter(E_06 != 0)
sum(nna$E_06 == "99") # cuantas personas no contestaron
nna <- nna %>% filter(E_06 != "99")
quantile(as.numeric(nna$E_06), probs = 0.75)
boxplot(as.numeric(nna$E_06))
hist(as.numeric(nna$E_06))
quantile(as.numeric(nna$E_06), probs = 0.75)
boxplot(as.numeric(nna$E_06))
hist(as.numeric(nna$E_06))
quantile(as.numeric(nna$E_06), probs = 0.25)
# Se borran los registros de "no aplica"
nna <- C_e %>% filter(E_09 != "0")
boxplot(as.numeric(nna$E_09))
hist(as.numeric(nna$E_09))
quantile(as.numeric(nna$E_09), probs = 0.25)
# Se borran los registros de "no aplica"
nna <- C_f%>% filter(F_08 != 0)
sum(nna$F_08 == "99") # cuantas personas no contestaron
nna <- nna %>% filter(F_08 != "99")
# Se borran los registros de "no aplica"
nna <- C_f%>% filter(F_08 != 0)
sum(nna$F_08 == "99") # cuantas personas no contestaron
nna <- nna %>% filter(F_08 != "99")
# Se borran los registros de "no aplica"
nna <- C_f%>% filter(F_08 != 0)
sum(nna$F_08 == "99") # cuantas personas no contestaron
nna <- nna %>% filter(F_08 != "99")
boxplot(as.numeric(nna$F_08))
hist(as.numeric(nna$F_08))
quantile(as.numeric(nna$F_08), probs = 0.25)
# Se borran los registros de "no aplica"
nna <- C_f%>% filter(F_08 != 0)
sum(nna$F_08 == "99") # cuantas personas no contestaron
nna <- nna %>% filter(F_08 != "99")
colSums(is.na(nna))
View(nna)
#### F - Alcohol ----
C_f <- read_csv("Datos originales/f_capitulos.csv")
C_f <- C_f %>%
select(-`SECUENCIA_ENCUESTA`, -`SECUENCIA_P`, -`ORDEN`) %>%
mutate_all(as.character) %>%
#se toman en cuenta solo los que han tomado alcohol
filter(F_03 == "1") %>%
#se remplaza por "na" todos los no aplica
mutate(F_01_CUAL = case_when(F_01 == "2" ~  "na", TRUE ~ F_01_CUAL),
F_02_CUAL = case_when(F_02 == "2" ~  "na", TRUE ~ F_02_CUAL),
F_07 = case_when(!(F_06 == "1") ~ "na", TRUE ~ F_07),
#para que la variable quede numérica se pone en vez de "na", no hay 0 en la variable original.
F_08 = case_when(!(F_07 == "1") ~ "0", TRUE ~ F_08), #num
#Hay 0 en la variable original.
F_09 = case_when(!(F_07 == "1") ~ "na", TRUE ~ F_09), #num
F_10_A = case_when(!(F_07 == "1") ~ "na", TRUE ~ F_10_A),
F_10_B = case_when(!(F_07 == "1") ~ "na", TRUE ~ F_10_B),
F_10_C = case_when(!(F_07 == "1") ~ "na", TRUE ~ F_10_C),
F_10_D = case_when(!(F_07 == "1") ~ "na", TRUE ~ F_10_D),
F_10_E = case_when(!(F_07 == "1") ~ "na", TRUE ~ F_10_E),
F_10_F = case_when(!(F_07 == "1") ~ "na", TRUE ~ F_10_F),
F_10_G = case_when(!(F_07 == "1") ~ "na", TRUE ~ F_10_G),
F_10_H = case_when(!(F_07 == "1") ~ "na", TRUE ~ F_10_H),
F_10_I = case_when(!(F_07 == "1") ~ "na", TRUE ~ F_10_I),
F_11 = case_when(!(F_06 == "1") ~ "na", TRUE ~ F_11),
F_12 = case_when(!(F_06 == "1") ~ "na", TRUE ~ F_12),
F_13 = case_when(!(F_06 == "1") ~ "na", TRUE ~ F_13),
F_14 = case_when(!(F_06 == "1") ~ "na", TRUE ~ F_14),
F_15 = case_when(!(F_06 == "1") ~ "na", F_14 == "1" ~  "na", TRUE ~ F_15),
F_16 = case_when(!(F_06 == "1") ~ "na", F_14 == "1" ~  "na", TRUE ~ F_16),
F_17 = case_when(!(F_06 == "1") ~ "na", F_14 == "1" ~  "na", TRUE ~ F_17),
F_18 = case_when(!(F_06 == "1") ~ "na", F_14 == "1" ~  "na", TRUE ~ F_18),
F_19 = case_when(!(F_06 == "1") ~ "na", F_14 == "1" ~  "na", TRUE ~ F_19),
F_20 = case_when(!(F_06 == "1") ~ "na", TRUE ~ F_20),
F_20_CUAL = case_when(!(F_20 == "1") ~  "na", TRUE ~ F_20_CUAL),
F_21 = case_when(!(F_06 == "1") ~ "na", TRUE ~ F_21),
F_21_CUAL = case_when(!(F_21 == "1") ~  "na", TRUE ~ F_21_CUAL)) %>%
mutate(F_04 = as.integer(F_04),
F_08 = as.integer(F_08))
colSums(is.na(C_f))
View(C_f)
# Se borran los registros de "no aplica"
nna <- C_f%>% filter(F_08 != 0)
sum(nna$F_08 == "99") # cuantas personas no contestaron
nna <- nna %>% filter(F_08 != "99")
colSums(is.na(nna))
boxplot(as.numeric(nna$F_08))
hist(as.numeric(nna$F_08))
quantile(as.numeric(nna$F_08), probs = 0.25)
nna <- C_f%>% filter(F_08 != 0)
sum(nna$F_08 == "99") # cuantas personas no contestaron
nna <- nna %>% filter(F_08 != "99")
nna <- C_f%>% filter(F_08 != 0)
sum(nna$F_08 == "99") # cuantas personas no contestaron
nna <- nna %>% filter(F_08 != "99")
nrow(nna)
nna <- C_e%>% filter(E_06 != 0)
sum(nna$E_06 == "99") # cuantas personas no contestaron
nna <- nna %>% filter(E_06 != "99")
nrow(nna)
# Se borran los registros de "no aplica"
nna <- C_f%>% filter(F_09 != "na")
# Se borran los registros de "no aplica"
nna <- C_f%>% filter(F_09 != "na")
sum(nna$F_09 == "99") # cuantas personas no contestaron
nna <- nna %>% filter(F_09 != "99") %>% mutate(as.numeric(F_09))
nrow(nna)
nna <- C_f%>% filter(F_09 != "na")
sum(nna$F_09 == "99") # cuantas personas no contestaron
nna <- nna %>% filter(F_09 != "99") %>% mutate(as.numeric(F_09))
nrow(nna)
```
# Se borran los registros de "no aplica"
nna <- C_f%>% filter(F_09 != "na")
sum(nna$F_09 == "99") # cuantas personas no contestaron
nna <- nna %>% filter(F_09 != "99") %>% mutate(as.numeric(F_09))
nrow(nna)
# Se borran los registros de "no aplica"
nna <- C_f%>% filter(F_09 != "na")
sum(nna$F_09 == "99") # cuantas personas no contestaron
nna <- nna %>% filter(F_09 != "99") %>% mutate(as.numeric(F_09))
nrow(nna)
# Se borran los registros de "no aplica"
nna <- C_f%>% filter(F_09 != "na")
sum(nna$F_09 == "99") # cuantas personas no contestaron
nna <- nna %>% filter(F_09 != "99") %>% mutate(F_09 = as.numeric(F_09))
nrow(nna)
nna <- C_f%>% filter(F_09 != "na")
sum(nna$F_09 == "99") # cuantas personas no contestaron
nna <- nna %>% filter(F_09 != "99") %>% mutate(F_09 = as.numeric(F_09))
nrow(nna)
boxplot(as.numeric(nna$F_09))
hist(as.numeric(nna$F_09))
quantile(as.numeric(nna$F_09), probs = 0.25)
boxplot(as.numeric(nna$F_08))
hist(as.numeric(nna$F_08))
quantile(as.numeric(nna$F_08), probs = 0.35)
nna <- C_e%>% filter(E_06 != 0)
library("readr")
library("dplyr")
library("stringr")
library("tidyr")
nna <- C_e%>% filter(E_06 != 0)
sum(nna$E_06 == "99") # cuantas personas no contestaron
nna <- nna %>% filter(E_06 != "99")
nrow(nna)
View(nna)
# Se borran los registros de "no aplica"
nna <- C_e %>% filter(E_09 != "0")
nrow(nna)
View(nna)
# Se borran los registros de "no aplica"
nna <- C_f%>% filter(F_08 != 0)
sum(nna$F_08 == "99") # cuantas personas no contestaron
nna <- nna %>% filter(F_08 != "99")
nrow(nna)
View(nna)
nna <- C_f%>% filter(F_08 != 0)
sum(nna$F_08 == "99") # cuantas personas no contestaron
nna <- nna %>% filter(F_08 != "99")
nrow(nna)
View(nna)
boxplot(as.numeric(nna$F_08))
hist(as.numeric(nna$F_08))
quantile(as.numeric(nna$F_08), probs = 0.35)
boxplot(as.numeric(nna$F_08))
hist(as.numeric(nna$F_08))
quantile(as.numeric(nna$F_08), probs = 0.25)
boxplot(nna$E_06)
nna <- C_e%>% filter(E_06 != 0)
sum(nna$E_06 == "99") # cuantas personas no contestaron
nna <- nna %>% filter(E_06 != "99")
nrow(nna)
boxplot(nna$E_06)
hist(nna$E_06)
quantile(nna$E_06, probs = 0.25)
nna <- C_e %>% filter(E_09 != "0")
nrow(nna)
boxplot(nna$E_09)
hist(nna$E_09)
quantile(nna$E_09, probs = 0.25)
# Se borran los registros de "no aplica"
nna <- C_e %>% filter(E_09 != "0")
nrow(nna)
boxplot(nna$E_09)
hist(nna$E_09)
quantile(nna$E_09, probs = 0.25)
nna <- C_f%>% filter(F_08 != 0)
sum(nna$F_08 == "99") # cuantas personas no contestaron
nna <- nna %>% filter(F_08 != "99")
nrow(nna)
nna <- C_f%>% filter(F_08 != 0)
sum(nna$F_08 == "99") # cuantas personas no contestaron
nna <- nna %>% filter(F_08 != "99")
nrow(nna)
View(nna)
boxplot(nna$F_08)
hist(nna$F_08)
quantile(nna$F_08, probs = 0.25)
nna <- C_f%>% filter(F_09 != "na")
sum(nna$F_09 == "99") # cuantas personas no contestaron
nna <- nna %>% filter(F_09 != "99") %>% mutate(F_09 = as.numeric(F_09))
nrow(nna)
View(nna)
boxplot(nna$F_09)
hist(nna$F_09)
quantile(nna$F_09, probs = 0.25)
boxplot(nna$F_09)
hist(nna$F_09)
quantile(nna$F_09, probs = 0.25)
boxplot(nna$F_09)
hist(nna$F_09)
quantile(nna$F_09, probs = 0.25)
# Se borran los registros de "no aplica"
nna <- C_f%>% filter(F_12 != "na")
library("readr")
library("dplyr")
library("stringr")
library("tidyr")
# Se borran los registros de "no aplica"
nna <- C_f%>% filter(F_12 != "na")
View(nna)
table(C_f$F_12)
nna <- C_f%>% filter(F_12 != "na")
nrow(nna)
table(nna$F_12)
prop.table(table(nna$F_12))
proportions <- prop.table(table(nna$F_12)); proportions
barplot(proportions, horiz = TRUE, names.arg = categories, col = "skyblue",
xlab = "Proportion", ylab = "Categories", main = "Proportions of Categories")
barplot(proportions, horiz = TRUE, col = "skyblue",
xlab = "Proportion", ylab = "Categories", main = "Proportions of Categories")
barplot(proportions, horiz = TRUE,
xlab = "Proportion", ylab = "Categories", main = "Proportions of Categories")
# Se borran los registros de "no aplica"
nna <- C_f%>% filter(F_14 != "na")
nrow(nna)
proportions <- prop.table(table(nna$F_14)); proportions
barplot(proportions, horiz = TRUE,
xlab = "Proportion", ylab = "Categories", main = "Proportions of Categories")
barplot(cumprop, horiz = TRUE,
xlab = "Proportion", ylab = "Categories", main = "Proportions of Categories")
cumprop <- cumsum(proportions)
barplot(cumprop, horiz = TRUE,
xlab = "Proportion", ylab = "Categories", main = "Proportions of Categories")
plot(0, 0, type = "n", xlim = c(0, 1), ylim = c(0, 1), xlab = "Proportion", ylab = "Categories", main = "Proportions of Categories")
nrow(proportions)
for (i in 1:length(nrow(proportions))) {
rect(segments_start[i], 0, segments_start[i] + proportions[i], 1, col = colors[i], border = NA)
}
x <- sort(nna$F_14)
x
quantile(x, 0.25)
proportions <- as.data.frame(prop.table(table(nna$F_14))); proportions
View(proportions)
ggplot(proportions, aes(x = 1, y = Freq, fill = Var1)) +
geom_bar(stat = "identity") +
coord_flip() +  # Rotate the plot to have bars side by side
labs(x = NULL, y = "Proportion") +  # Remove x-axis label and set y-axis label
theme_minimal()
library(ggplot2)
ggplot(proportions, aes(x = 1, y = Freq, fill = Var1)) +
geom_bar(stat = "identity") +
coord_flip() +  # Rotate the plot to have bars side by side
labs(x = NULL, y = "Proportion") +  # Remove x-axis label and set y-axis label
theme_minimal()
quantile(as.integer(nna$F_14), 0.25)
ggplot(proportions, aes(x = 1, y = Freq, fill = Var1)) +
geom_bar(stat = "identity") +
coord_flip() +  # Rotate the plot to have bars side by side
labs(x = NULL, y = "Proportion") +  # Remove x-axis label and set y-axis label
theme_minimal()
quantile(as.integer(nna$F_14), 0.25)
# Se borran los registros de "no aplica"
nna <- C_h%>% filter(H_05 != 0)
sum(nna$H_05 == "99") # cuantas personas no contestaron
nna <- nna %>% filter(H_05 != "99")
nrow(nna)
boxplot(nna$H_05)
hist(nna$H_05)
quantile(nna$H_05, probs = 0.25)
# Se borran los registros de "no aplica"
nna <- i%>% filter(I_05 != 0)
# Se borran los registros de "no aplica"
nna <- C_i%>% filter(I_05 != 0)
sum(nna$I_05 == "99") # cuantas personas no contestaron
nna <- nna %>% filter(I_05 != "99")
nrow(nna)
boxplot(nna$I_05)
hist(nna$I_05)
quantile(nna$I_05, probs = 0.25)
# Se borran los registros de "no aplica"
nna <- C_j%>% filter(J_03 != "na")
table(nna$J_03)
nrow(nna)
table(C_j$J_03)
table(C_j_1$J_03)
# Se borran los registros de "no aplica"
nna <- C_j_1%>% filter(J_03 != "na")
nrow(nna)
proportions <- as.data.frame(prop.table(table(nna$J_03))); proportions
proportions <- as.data.frame(prop.table(table(nna$J_03))); proportions
# Se mira el percentil 75% ya que el gráfico los pone al revés, iniciando por 5 (mas frecuentemente)
ggplot(proportions, aes(x = 1, y = Freq, fill = Var1)) +
geom_bar(stat = "identity") +
coord_flip() +
labs(x = NULL, y = "Proportion")
quantile(as.integer(nna$J_03), 0.25)
# Se borran los registros de "no aplica"
nna <- C_j_2%>% filter(J_09 != "na")
nrow(nna)
proportions <- as.data.frame(prop.table(table(nna$J_09))); proportions
# Se mira el percentil 75% ya que el gráfico los pone al revés, iniciando por 5 (mas frecuentemente)
ggplot(proportions, aes(x = 1, y = Freq, fill = Var1)) +
geom_bar(stat = "identity") +
coord_flip() +
labs(x = NULL, y = "Proportion")
quantile(as.integer(nna$J_09), 0.25)
# Se borran los registros de "no aplica"
nna <- C_k%>% filter(K_04 != "na")
table(nna$K_04)
# Se borran los registros de "no aplica"
nna <- C_k%>% filter(K_04 != "na")
sum(nna$K_04 == "9") # cuantas personas no contestaron
nna <- nna %>% filter(K_04 != "9")
nrow(nna)
proportions <- as.data.frame(prop.table(table(nna$K_04))); proportions
proportions <- as.data.frame(prop.table(table(nna$K_04))); proportions
# Se mira el percentil 75% ya que el gráfico los pone al revés, iniciando por 5 (mas frecuentemente)
ggplot(proportions, aes(x = 1, y = Freq, fill = Var1)) +
geom_bar(stat = "identity") +
coord_flip() +
labs(x = NULL, y = "Proportion")
quantile(as.integer(nna$J_09), 0.25)
proportions <- as.data.frame(prop.table(table(nna$K_04))); proportions
# Se mira el percentil 75% ya que el gráfico los pone al revés, iniciando por 5 (mas frecuentemente)
ggplot(proportions, aes(x = 1, y = Freq, fill = Var1)) +
geom_bar(stat = "identity") +
coord_flip() +
labs(x = NULL, y = "Proportion")
quantile(as.integer(nna$K_04), 0.25)
# Se borran los registros de "no aplica"
nna <- C_k%>% filter(K_06 != 0)
sum(nna$K_06 == "99") # cuantas personas no contestaron
nna <- nna %>% filter(K_06 != "99")
nrow(nna)
boxplot(nna$K_06)
hist(nna$K_06)
quantile(nna$K_06, probs = 0.25)
